name : Lint and Test Code

on:
  pull_request:
    branches:
      - master

  push:
    paths:
      - 'assets/**'
      - 'odc_index/**'
      - 'tests/**'
      - '.github/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements-*.txt'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.6]

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 0

    - name: Run Shell Linter
      run: |
        sudo apt-get install -y shellcheck
        for a in $(ls assets/*.sh); do shellcheck $a ;done

    - name: Run Python Linter
      uses: lgeiger/black-action@master
      with:
        args: ". --check"
    
    - name: Build Docker
      run: |
        docker build -t datacube-index .

    - name: Run Dockerized Bootstrapping from Git
      timeout-minutes: 2
      shell: bash
      env:
        PRODUCT_CATALOG : https://raw.githubusercontent.com/GeoscienceAustralia/dea-config/a4f39b485b33608a016032d9987251881fec4b6f/workspaces/sandbox-products.csv
        METADATA_CATALOG : https://raw.githubusercontent.com/GeoscienceAustralia/dea-config/a4f39b485b33608a016032d9987251881fec4b6f/workspaces/sandbox-metadata.yaml
      run: |
        docker-compose up -d
        docker-compose run dc-index /code/bootstrap-odc.sh $PRODUCT_CATALOG $METADATA_CATALOG
        docker-compose exec -T dc-db psql -U postgres -c "SELECT count(*) from agdc.metadata_type"
        docker-compose exec -T dc-db psql -U postgres -c "SELECT count(*) from agdc.dataset_type"
        docker-compose down

    - name: Run Dockerized Tests for S3
      timeout-minutes: 10
      shell: bash
      env:
        AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        docker-compose up -d
        docker-compose run dc-index datacube system init
        docker-compose run dc-index datacube system check
        docker-compose run dc-index datacube product add https://raw.githubusercontent.com/GeoscienceAustralia/digitalearthau/develop/digitalearthau/config/products/cemp_insar_alos_displacement.yaml
        docker-compose run dc-index s3-to-dc s3://dea-public-data/cemp_insar/insar/displacement/alos//**/*.yaml cemp_insar_alos_displacement
        echo "Checking Indexed Datasets Count"
        docker-compose exec -T dc-db psql -U postgres -c "SELECT count(*) from agdc.dataset"
        echo "Checking STAC indexing"
        docker-compose run dc-index datacube product add https://raw.githubusercontent.com/digitalearthafrica/config/master/products/esa_s2_l2a.yaml
        docker-compose run dc-index s3-to-dc --stac "s3://sentinel-cogs/sentinel-s2-l2a-cogs/2020/S2A_32NNF_20200127_0_L2A/*.json"
        echo "Checking Indexed Datasets Count (including STAC)"
        docker-compose exec -T dc-db psql -U postgres -c "SELECT count(*) from agdc.dataset"
        docker-compose down

    - name: Run Dockerized Tests for Thredds
      timeout-minutes: 10
      shell: bash
      env:
        AWS_ACCESS_KEY_ID : ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        docker-compose up -d
        docker-compose run dc-index datacube system init
        docker-compose run dc-index datacube system check
        docker-compose run dc-index datacube metadata add https://raw.githubusercontent.com/GeoscienceAustralia/digitalearthau/develop/digitalearthau/config/metadata-types.odc-type.yaml || true
        docker-compose run dc-index datacube product add https://raw.githubusercontent.com/GeoscienceAustralia/digitalearthau/develop/digitalearthau/config/products/ga_s2_ard.odc-product.yaml
        docker-compose run dc-index thredds-to-dc --auto-add-lineage http://dapds00.nci.org.au/thredds/catalog/if87/2018-11-29/ "s2a_ard_granule s2a_level1c_granule s2b_ard_granule s2b_level1c_granule"
        echo "Checking Indexed Datasets Count"
        docker-compose exec -T dc-db psql -U postgres -c "SELECT count(*) from agdc.dataset"
        docker-compose down
